{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/value/value.component.css","webpack:///./src/app/value/value.component.html","webpack:///./src/app/value/value.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n<h1>\\n  Welcome to Dating Application!\\n</h1>\\n<app-value></app-value>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ValueComponent } from './value/value.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './services/auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ValueComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Dating Application</a>\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Matches</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Lists</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Messages</a>\\n      </li>\\n    </ul>\\n\\n    <form #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" #username=\\\"ngModel\\\"\\n        placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\"\\n        placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\n      <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\n    </form>\\n</nav>\\n\\n<pre>\\n  Form Valid: {{loginForm.valid}}\\n  Form Touched: {{loginForm.touched}}\\n  Form Dirty: {{loginForm.dirty}}\\n  Form Values: {{loginForm.value | json}}\\n\\n  Username Valid: {{username.valid}}\\n  Username Touched: {{username.touched}}\\n  Username Dirty: {{username.dirty}}\\n  Username Value: {{username.valid}}\\n\\n  Password Valid: {{password.valid}}\\n  Password Touched: {{password.touched}}\\n  Password Dirty: {{password.dirty}}\\n  Password Value: {{password.valid}}\\n</pre>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    console.log(this.model);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = 'http://localhost:5000/api/auth/';\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  login(model: any) {\n    return this.http\n      .post(this.baseUrl + 'login', model)\n      .pipe(\n        map((response: any) => {\n          const user = response;\n          if (user) {\n            localStorage.setItem('token', user.token);\n          }\n        })\n      );\n  }\n}\n","module.exports = \"\"","module.exports = \"<p *ngFor=\\\"let value of values\\\">\\n  {{value.id}} - {{value.name}}\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\r\n\n@Component({\n  selector: 'app-value',\n  templateUrl: './value.component.html',\n  styleUrls: ['./value.component.css']\n})\nexport class ValueComponent implements OnInit {\n\n  values: any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.getValues();\n  }\n\n  getValues() {\n    this.http\r\n      .get('http://localhost:5000/api/values')\r\n      .subscribe(\r\n        response => {\r\n          this.values = response;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}